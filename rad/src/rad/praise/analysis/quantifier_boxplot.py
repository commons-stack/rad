from importlib.metadata import distribution
from ..distribution.standard_praise import PraiseDistribution
import plotly.express as px
import pandas as pd
from IPython.display import Markdown, display
import json


# header = "# Histogram"
# description = f"This is a histogram of the { self.objectName} object. It's stored in /reward_systems/straight_distribution as a regular python module. Apart from perfoming the analysis, it can also output a visual representation with a specific header (above) and description text. "
author = "Nuggan"
Last_updated = "2022."
version = ""


def run(praise_distribution_data, _config={}):
    """
    Returns a DataFrame containing praise data by quantifier

    Args:
        praise_distribution_data: The object with the reward distribuiton system
    Raises:
        [TODO]: Check for errors and raise them
    Returns:
        res: a DataFrame with the requested results. Contains two columns, "ID" and "AMOUNT TO RECEIVE"

    """
    # print(praise_distribution_data)
    # distribution = PraiseDistribution.generate_from_dict(praise_distribution_data)
    distribution = praise_distribution_data
    res = distribution.praiseInstance.get_data_by_quantifier()

    return res


def printDescription(praise_distribution_data, _config={}):
    """
    Prints the description of the analysis module to be displayed above the graph

    Args:
        praise_distribution_data: The object with the reward distribuiton system
    Raises:
        [TODO]: Check for errors and raise them
    Returns:
        nothing, it prints the texts

    """
    # name = praise_distribution_data["name"]
    name = praise_distribution_data.name
    # header = f'# "{name}" Histogram'
    description = f"Let's see how different quantifiers behaved by showing the range of praise scores they gave. \n To interpret the box plot: \n- Bottom horizontal line of box plot is minimum value \n- First horizontal line of rectangle shape of box plot is First quartile or 25% \n- Second horizontal line of rectangle shape of box plot is Second quartile or 50% or median. \n- Third horizontal line of rectangle shape of box plot is third quartile or 75% \n- Top horizontal line of rectangle shape of box plot is maximum value."

    # display(Markdown(header))
    display(Markdown(description))


def printGraph(praise_distribution_data, _config={"x":"QUANT_ID", "y": ["QUANT_VALUE"]}):
    """
    Prints a visualization of the histogram generated by run(). This function is itended to be called from inside the jupyter notebook

    Args:
        praise_distribution_data: The object with the reward distribuiton system
    Raises:
        [TODO]: Check for errors and raise them
    Returns:
        nothing, it prints the figure

    """

    distribution = pd.DataFrame(run(praise_distribution_data))

    x_row = _config["x"]
    y_rows = _config["y"]


    fig_box = px.box(distribution, x=x_row, y=y_rows, points=False)
    fig_box.show()
